"use strict";(self.webpackChunkblah_blah=self.webpackChunkblah_blah||[]).push([[839],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>b});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=u(n),h=a,b=p["".concat(s,".").concat(h)]||p[h]||c[h]||l;return n?r.createElement(b,i(i({ref:t},d),{},{components:n})):r.createElement(b,i({ref:t},d))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=h;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:a,i[1]=o;for(var u=2;u<l;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},1247:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const l={title:"Getting Started"},i=void 0,o={unversionedId:"guides/getting-started",id:"guides/getting-started",title:"Getting Started",description:"This guide will get you running with a Blah-Blah installation in one minute!",source:"@site/docs/guides/1-getting-started.mdx",sourceDirName:"guides",slug:"/guides/getting-started",permalink:"/blahblah/guides/getting-started",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Getting Started"},sidebar:"sidebar",previous:{title:"Home",permalink:"/blahblah/"},next:{title:"Core Concepts",permalink:"/blahblah/guides/concepts"}},s={},u=[{value:"Setup",id:"setup",level:2},{value:"Usage",id:"usage",level:2},{value:"Testing",id:"testing",level:3}],d={toc:u},p="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This guide will get you running with a Blah-Blah installation in one minute!"),(0,a.kt)("h2",{id:"setup"},"Setup"),(0,a.kt)("p",null,"Add the dependency below into your module's ",(0,a.kt)("inlineCode",{parentName:"p"},"build.gradle.kts")," file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kt"},'// For development\n\n// It includes blah-blah fake.\nimplementation("io.github.behzodhalil:blahblah-fake:<latest-version>")\n// If only need yaml parser\nimplementation("io.github.behzodhalil:blahblah-yaml:<latest-version>")\n// If only need random\nimplementation("io.github.behzodhalil:blahblah-random:<latest-version>")\n\n// For testing\n\n// It includes blah-blah fake.\ntestImplementation("io.github.behzodhalil:blahblah-fake:<latest-version>")\n// If only need yaml parser\ntestImplementation("io.github.behzodhalil:blahblah-yaml:<latest-version>")\n// If only need random\ntestImplementation("io.github.behzodhalil:blahblah-random:<latest-version>")\n\n')),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("h3",{id:"testing"},"Testing"),(0,a.kt)("p",null,"class BlahBlahTest {"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"private lateinit var blah: BlahBlah\n\n@BeforeTest\nfun setup() {\n    blah = blah()\n}\n\n@Test\nfun `check the blah blah works properly`() {\n    val city = blah.address.city\n    val state = blah.address.state\n\n    assertNotNull(city)\n    assertNotNull(state)\n}\n\n@Test\nfun `check the street address gets successfully`() {\n    val streetAddress = blah.address.streetAddress\n\n\n    assertNotNull(streetAddress)\n    assertTrue(streetAddress.isDigit())\n}\n")),(0,a.kt)("p",null,"}"))}c.isMDXComponent=!0}}]);